{"version":3,"sources":["api/index.js","redux/posts/posts.types.js","images/memories.png","components/form/form.styles.js","components/posts/post/post.styles.js","components/posts/post/post.component.jsx","redux/posts/posts.actions.js","components/form/form.component.jsx","components/posts/posts.styles.js","components/posts/posts.component.jsx","app.styles.js","App.js","redux/posts/post.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["dotenv","config","url","updatePost","id","updatedPost","axios","patch","deletePost","delete","likePost","PostActionTypes","FETCH_ALL_POSTS","CREATE_POST","UPDATE_POST","DELETE_POST","LIKE_POST","makeStyles","theme","root","margin","spacing","paper","padding","form","display","flexWrap","justifyContent","fileInput","width","buttonSubmit","marginBottom","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","flexDirection","borderRadius","position","overlay","top","left","color","overlay2","right","grid","details","title","cardActions","Post","post","setCurrentId","classes","useStyles","dispatch","useDispatch","Card","className","CardMedia","image","selectedFile","Typography","variant","creator","moment","createdAt","fromNow","Button","style","size","onClick","_id","fontSize","tags","map","tag","gutterBottom","CardContent","message","component","CardActions","a","api","data","type","payload","console","log","likeCount","Form","currentId","useState","postData","setPostData","useSelector","state","posts","find","useEffect","clear","Paper","autoComplete","noValidate","onSubmit","event","preventDefault","newPost","createPost","TextField","name","label","fullWidth","value","onChange","target","split","multiple","onDone","base64","mainContainer","alignItems","smMargin","actionDiv","textAlign","Posts","length","Grid","container","itme","xs","sm","md","CircularProgress","appBar","heading","marginLeft","App","get","Container","maxWidth","AppBar","align","src","memories","alt","Grow","in","justify","item","postReducer","action","filter","combineReducers","middlewares","thunk","logger","store","createStore","reducers","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"gRAEAA,EAAOC,SAIP,IAAMC,EAAM,wCAKCC,EAAa,SAACC,EAAGC,GAAJ,OAAmBC,IAAMC,MAAN,UAAeL,EAAf,YAAsBE,GAAMC,IAC5DG,EAAa,SAACJ,GAAD,OAAQE,IAAMG,OAAN,UAAgBP,EAAhB,YAAuBE,KAC5CM,EAAW,SAACN,GAAD,OAAQE,IAAMC,MAAN,UAAeL,EAAf,YAAsBE,EAAtB,eCLjBO,EARS,CACpBC,gBAAiB,kBACjBC,YAAa,cACbC,YAAY,cACZC,YAAa,cACbC,UAAW,aCLA,MAA0B,qC,4DCE1BC,eAAW,SAACC,GAAD,MAAY,CACpCC,KAAM,CACJ,uBAAwB,CACtBC,OAAQF,EAAMG,QAAQ,KAG1BC,MAAO,CACLC,QAASL,EAAMG,QAAQ,IAEzBG,KAAM,CACJC,QAAS,OACTC,SAAU,OACVC,eAAgB,UAElBC,UAAW,CACTC,MAAO,MACPT,OAAQ,UAEVU,aAAc,CACZC,aAAc,QCnBHd,cAAW,CACxBe,MAAO,CACLC,OAAQ,EACRC,WAAY,SACZC,gBAAiB,qBACjBC,oBAAqB,UAEvBC,OAAQ,CACNA,OAAQ,SAEVC,eAAgB,CACdL,OAAQ,QAEVM,KAAM,CACJd,QAAS,OACTe,cAAe,SACfb,eAAgB,gBAChBc,aAAc,OAEdC,SAAU,WACVtB,OAAQ,QAEVuB,QAAS,CACPD,SAAU,WACVE,IAAK,OACLC,KAAM,OACNC,MAAO,SAETC,SAAU,CACRL,SAAU,WACVE,IAAK,OACLI,MAAO,OACPF,MAAO,SAETG,KAAM,CACJxB,QAAS,QAEXyB,QAAS,CACPzB,QAAS,OACTE,eAAgB,gBAChBP,OAAQ,QAEV+B,MAAO,CACL5B,QAAS,UAEX6B,YAAa,CACX7B,QAAS,kBACTE,QAAS,OACTE,eAAgB,mB,+GCML0B,EA7CF,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,aACXC,EAAUC,IACVC,EAAWC,cAIjB,OACI,eAACC,EAAA,EAAD,CAAMC,UAAWL,EAAQjB,KAAzB,UACI,cAACuB,EAAA,EAAD,CAAWD,UAAWL,EAAQxB,MAAO+B,MAAOT,EAAKU,aAAcb,MAAOG,EAAKH,QAC3E,sBAAKU,UAAWL,EAAQb,QAAxB,UACI,cAACsB,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BZ,EAAKa,UAC/B,cAACF,EAAA,EAAD,CAAYC,QAAQ,QAApB,SAA6BE,IAAOd,EAAKe,WAAWC,eAExD,qBAAKT,UAAWL,EAAQT,SAAxB,SACI,cAACwB,EAAA,EAAD,CAAQC,MAAO,CAAC1B,MAAM,SAAU2B,KAAK,QAAQC,QAAS,kBAAKnB,EAAaD,EAAKqB,MAA7E,SACI,cAAC,IAAD,CAAeC,SAAS,gBAGhC,qBAAKf,UAAWL,EAAQN,QAAxB,SACI,cAACe,EAAA,EAAD,CAAYC,QAAQ,QAAQpB,MAAM,gBAAlC,SACKQ,EAAKuB,KAAKC,KAAI,SAAAC,GAAG,iBAAQA,UAGlC,cAACd,EAAA,EAAD,CAAYJ,UAAWL,EAAQL,MAAOe,QAAQ,KAAKc,cAAY,EAA/D,SAAiE1B,EAAKH,QACtE,cAAC8B,EAAA,EAAD,UACA,cAAChB,EAAA,EAAD,CAAYJ,UAAWL,EAAQ0B,QAAShB,QAAQ,QAAQpB,MAAM,gBAAgBqC,UAAU,IAAxF,SACS7B,EAAK4B,YAGd,eAACE,EAAA,EAAD,CAAavB,UAAWL,EAAQJ,YAAhC,UACI,eAACmB,EAAA,EAAD,CAAQE,KAAK,QAAQ3B,MAAM,UAAU4B,QAAS,WCctC,IAACtE,EDd2CsD,GCc3CtD,EDd6DkD,EAAKqB,ICcnE,uCAAQ,WAAOjB,GAAP,iBAAA2B,EAAA,+EAEHC,EAAalF,GAFV,gBAEjBmF,EAFiB,EAEjBA,KAEP7B,EAAS,CAAC8B,KAAK7E,EAAgBK,UAAWyE,QAAQF,IAJ1B,gDAOxBG,QAAQC,IAAR,MAPwB,yDAAR,yDDdR,UACI,cAAC,IAAD,CAAgBf,SAAS,UAD7B,iBAEuBtB,EAAKsC,aAE5B,eAACrB,EAAA,EAAD,CAAQE,KAAK,QAAQ3B,MAAM,UAAU4B,QAAS,kBAAKhB,GCJxCtD,EDI4DkD,EAAKqB,ICJlE,uCAAQ,WAAOjB,GAAP,SAAA2B,EAAA,+EAEpBC,EAAelF,GAFK,OAI1BsD,EAAS,CAAC8B,KAAK7E,EAAgBI,YAAa0E,QAAQrF,IAJ1B,+CAQ1BsF,QAAQC,IAAI,KAAMT,SARQ,wDAAR,4DAAC9E,GDIX,UACI,cAAC,IAAD,CAAYwE,SAAS,UADzB,mBE0DDiB,EA7FF,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,UAAWvC,EAAkB,EAAlBA,aAChBC,EAAUC,IADwB,EAERsC,mBAAS,CACrC5C,MAAM,GACN+B,QAAQ,GACRf,QAAQ,GACRU,KAAK,GACLb,aAAa,KAPuB,mBAEjCgC,EAFiC,KAEvBC,EAFuB,KAUlC3C,EAAO4C,aAAY,SAAAC,GAAK,OAAIL,EAAYK,EAAMC,MAAMC,MAAK,SAAA/C,GAAI,OAAIA,EAAKqB,MAAQmB,KAAa,QAEjGQ,qBAAW,WACHhD,GACA2C,EAAY3C,KAElB,CAACA,IAEH,IAAMI,EAAWC,cAgBX4C,EAAQ,WACVhD,EAAa,MACb0C,EAAY,CACR9C,MAAM,GACN+B,QAAQ,GACRf,QAAQ,GACRU,KAAK,GACLb,aAAa,MAKrB,OACI,cAACwC,EAAA,EAAD,CAAO3C,UAAWL,EAAQlC,MAA1B,SACI,uBAAMmF,aAAa,MAAMC,YAAU,EAAC7C,UAAS,UAAKL,EAAQrC,KAAb,YAAqBqC,EAAQhC,MAAQmF,SA5BrE,SAACC,GAClBA,EAAMC,iBAGFnD,EADAoC,EDNc,SAAC1F,EAAGkD,GAAJ,8CAAa,WAAOI,GAAP,SAAA2B,EAAA,+EAEZC,EAAelF,EAAGkD,GAFN,cAK/BI,EAAS,CAAC8B,KAAK7E,EAAgBG,YAAa2E,QAAQnC,IALrB,gDAQ/BoC,QAAQC,IAAI,KAAMT,SARa,yDAAb,sDCOL/E,CAAW2F,EAAUE,GDjBhB,SAAC1C,GAAD,8CAAU,WAAOI,GAAP,eAAA2B,EAAA,+ENPTyB,EMSexD,ENTHhD,IAAMgD,KAAKpD,EAAK4G,GMOnB,OAEtBvB,EAFsB,OAG5B7B,EAAS,CAAC8B,KAAK7E,EAAgBE,YAAY4E,QAAQF,IAHvB,gDAK5BG,QAAQC,IAAI,KAAMT,SALU,kCNPV,IAAC4B,IMOS,oBAAV,sDCoBJC,CAAWf,IAG7BO,KAkBQ,UACI,eAACtC,EAAA,EAAD,CAAYC,QAAQ,KAApB,UAA2B4B,EAAW,UAAY,WAAlD,eACA,cAACkB,EAAA,EAAD,CACAC,KAAK,UACL/C,QAAQ,WACRgD,MAAM,UACNC,WAAS,EACTC,MAAOpB,EAAS7B,QAChBkD,SAAU,SAAAT,GAAK,OAAIX,EAAY,2BAAID,GAAL,IAAc7B,QAASyC,EAAMU,OAAOF,YAClE,cAACJ,EAAA,EAAD,CACAC,KAAK,QACL/C,QAAQ,WACRgD,MAAM,QACNC,WAAS,EACTC,MAAOpB,EAAS7C,MAChBkE,SAAU,SAAAT,GAAK,OAAIX,EAAY,2BAAID,GAAL,IAAc7C,MAAOyD,EAAMU,OAAOF,YAChE,cAACJ,EAAA,EAAD,CACAC,KAAK,UACL/C,QAAQ,WACRgD,MAAM,UACNC,WAAS,EACTC,MAAOpB,EAASd,QAChBmC,SAAU,SAAAT,GAAK,OAAIX,EAAY,2BAAID,GAAL,IAAcd,QAAS0B,EAAMU,OAAOF,YAClE,cAACJ,EAAA,EAAD,CACAC,KAAK,OACL/C,QAAQ,WACRgD,MAAM,OACNC,WAAS,EACTC,MAAOpB,EAASnB,KAChBwC,SAAU,SAAAT,GAAK,OAAIX,EAAY,2BAAID,GAAL,IAAcnB,KAAM+B,EAAMU,OAAOF,MAAMG,MAAM,WAC3E,qBAAK1D,UAAWL,EAAQ5B,UAAxB,SACI,cAAC,IAAD,CACI4D,KAAK,OACLgC,UAAU,EACVC,OAAQ,gBAAEC,EAAF,EAAEA,OAAF,OAAczB,EAAY,2BAAID,GAAL,IAAchC,aAAa0D,UAIpE,cAACnD,EAAA,EAAD,CAAQV,UAAWL,EAAQ1B,aAAcoC,QAAQ,YAAYpB,MAAM,UAAU2B,KAAK,QAAQe,KAAK,SAAS2B,WAAS,EAAjH,oBACA,cAAC5C,EAAA,EAAD,CAAQL,QAAQ,YAAYpB,MAAM,YAAY2B,KAAK,QAAQC,QAAS6B,EAAOY,WAAS,EAApF,yB,SC/FDlG,eAAW,SAACC,GAAD,MAAY,CACpCyG,cAAe,CACblG,QAAS,OACTmG,WAAY,UAEdC,SAAU,CACRzG,OAAQF,EAAMG,QAAQ,IAExByG,UAAW,CACTC,UAAW,cCkBAC,EArBD,SAAC,GAAoB,IAAnBzE,EAAkB,EAAlBA,aACN6C,EAAQF,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SACnC5C,EAAUC,IAGhB,OADAiC,QAAQC,IAAIS,GAERA,EAAM6B,OACF,cAACC,EAAA,EAAD,CAAMrE,UAAWL,EAAQ2E,UAAWA,WAAS,EAACP,WAAW,UAAUvG,QAAS,EAA5E,SAEO+E,EAAMtB,KAAI,SAAAxB,GAAI,OACV,cAAC4E,EAAA,EAAD,CAAqBE,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA7C,SACI,cAAC,EAAD,CAAMjF,KAAMA,EAAMC,aAAcA,KADzBD,EAAKqB,UAJhB,cAAC6D,EAAA,EAAD,KCVRvH,eAAW,iBAAK,CAC3BwH,OAAQ,CACJhG,aAAc,GACdrB,OAAQ,SACRK,QAAS,OACTe,cAAe,MACfb,eAAgB,SAChBiG,WAAY,UAEdc,QAAS,CACP5F,MAAO,sBAETiB,MAAO,CACL4E,WAAY,YC4BLC,EAjCH,WAAO,IAAD,EACoB7C,mBAAS,MAD7B,mBACPD,EADO,KACIvC,EADJ,KAGRC,EAAUvC,IACVyC,EAAWC,cAMjB,OAJA2C,qBAAU,WACN5C,ELdgB,uCACnB,WAAMA,GAAN,iBAAA2B,EAAA,+ENG2B/E,IAAMuI,IAAI3I,GMHrC,uBAEUqF,EAFV,EAEUA,KAFV,SAIS7B,EAAS,CAAC8B,KAAK7E,EAAgBC,gBAAiB6E,QAASF,IAJlE,uDAMGG,QAAQC,IAAI,KAAMT,SANrB,yDADmB,yDKelB,CAACxB,IAGC,eAACoF,EAAA,EAAD,CAAWC,SAAS,KAApB,UACI,eAACC,EAAA,EAAD,CAAQnF,UAAWL,EAAQiF,OAAQ/F,SAAS,SAASI,MAAM,UAA3D,UACI,cAACmB,EAAA,EAAD,CAAYJ,UAAWL,EAAQkF,QAASxE,QAAQ,KAAK+E,MAAM,SAA3D,4BACA,qBAAKpF,UAAWL,EAAQO,MAAOmF,IAAKC,EAAUC,IAAI,WAAWnH,OAAO,UAExE,cAACoH,EAAA,EAAD,CAAMC,IAAE,EAAR,SACI,cAACR,EAAA,EAAD,UACI,eAACZ,EAAA,EAAD,CAAMC,WAAS,EAACoB,QAAQ,gBAAgB3B,WAAW,UAAUvG,QAAS,EAAtE,UACI,cAAC6G,EAAA,EAAD,CAAMsB,MAAI,EAACnB,GAAI,GAAIC,GAAI,EAAvB,SACI,cAAC,EAAD,CAAO/E,aAAcA,MAEzB,cAAC2E,EAAA,EAAD,CAAMsB,MAAI,EAACnB,GAAI,GAAIC,GAAI,EAAvB,SACI,cAAC,EAAD,CAAMxC,UAAWA,EAAWvC,aAAcA,iB,2BCZvDkG,GArBK,WAAuB,IAAtBrD,EAAqB,uDAAd,GAAGsD,EAAW,uCACtC,OAAQA,EAAOlE,MACX,KAAK7E,EAAgBC,gBACjB,OAAO8I,EAAOjE,QAElB,KAAK9E,EAAgBE,YACjB,MAAM,GAAN,oBAAWuF,GAAX,CAAkBsD,EAAOjE,UAC7B,KAAK9E,EAAgBG,YACjB,OAAOsF,EAAMtB,KAAI,SAAAxB,GAAI,OAAGA,EAAKqB,MAAQ+E,EAAOjE,QAAQd,IAAM+E,EAAOjE,QAAUnC,KAC/E,KAAK3C,EAAgBI,YACjB,OAAOqF,EAAMuD,QAAO,SAAArG,GAAI,OAAGA,EAAKqB,MAAQ+E,EAAOjE,WAE/C,KAAK9E,EAAgBK,UACrB,OAAOoF,EAAMtB,KAAI,SAAAxB,GAAI,OAAGA,EAAKqB,MAAQ+E,EAAOjE,QAAQd,IAAM+E,EAAOjE,QAAUnC,KAE/E,QACI,OAAO8C,ICdJwD,gBAAgB,CAC3BxD,MAAOqD,K,oBCCLI,GAAc,CAACC,KAAMC,MAIZC,GAFDC,aAAYC,GAASC,KAAe,WAAf,EAAmBN,K,OCKtDO,IAASC,OACL,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACI,cAAC,EAAD,MAEHM,SAASC,eAAe,W","file":"static/js/main.a41c752f.chunk.js","sourcesContent":["import axios from 'axios';\nimport dotenv from 'dotenv'\ndotenv.config();\n\n\n\nconst url = 'https://memorieap.herokuapp.com/posts'\n\n\nexport const fetchPosts = () => axios.get(url);\nexport const createPost = (newPost) => axios.post(url, newPost)\nexport const updatePost = (id,updatedPost) =>axios.patch(`${url}/${id}`, updatedPost)\nexport const deletePost = (id) => axios.delete(`${url}/${id}`);\nexport const likePost = (id) => axios.patch(`${url}/${id}/likepost`);\n","const PostActionTypes = {\n    FETCH_ALL_POSTS: 'FETCH_ALL_POSTS',\n    CREATE_POST: 'CREATE_POST', \n    UPDATE_POST:'UPDATE_POST',\n    DELETE_POST: 'DELETE_POST',\n    LIKE_POST: 'LIKE_POST'\n}\n\nexport default PostActionTypes;","export default __webpack_public_path__ + \"static/media/memories.9cfa8a46.png\";","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  form: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  fileInput: {\n    width: '97%',\n    margin: '10px 0',\n  },\n  buttonSubmit: {\n    marginBottom: 10,\n  },\n}));","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  media: {\n    height: 0,\n    paddingTop: '56.25%',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    backgroundBlendMode: 'darken',\n  },\n  border: {\n    border: 'solid',\n  },\n  fullHeightCard: {\n    height: '100%',\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    borderRadius: '15px',\n    // height: '100%',\n    position: 'relative',\n    margin: '10px',\n  },\n  overlay: {\n    position: 'absolute',\n    top: '20px',\n    left: '20px',\n    color: 'white',\n  },\n  overlay2: {\n    position: 'absolute',\n    top: '20px',\n    right: '20px',\n    color: 'white',\n  },\n  grid: {\n    display: 'flex',\n  },\n  details: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: '20px',\n  },\n  title: {\n    padding: '0 16px',\n  },\n  cardActions: {\n    padding: '0 16px 8px 16px',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n});","import React from 'react';\nimport useStyles from './post.styles.js';\nimport {Card, CardActions, CardContent, CardMedia, Button, Typography} from '@material-ui/core';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport moment from 'moment';\nimport {useDispatch} from 'react-redux'\nimport { deletePost, likePost } from '../../../redux/posts/posts.actions.js';\n\n\nconst Post = ({post, setCurrentId}) => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n\n\n    return (\n        <Card className={classes.card}>\n            <CardMedia className={classes.media} image={post.selectedFile} title={post.title}/>\n            <div className={classes.overlay}>\n                <Typography variant='h6'>{post.creator}</Typography>\n                <Typography variant='body2'>{moment(post.createdAt).fromNow()}</Typography>\n            </div>\n            <div className={classes.overlay2}>\n                <Button style={{color:'white'}} size=\"small\" onClick={()=> setCurrentId(post._id)}>\n                    <MoreHorizIcon fontSize='default'/>\n                </Button>\n            </div>\n            <div className={classes.details}>\n                <Typography variant='body2' color='textSecondary'>\n                    {post.tags.map(tag => `#${tag}`)}\n                </Typography>\n            </div>\n            <Typography className={classes.title} variant=\"h5\" gutterBottom>{post.title}</Typography>\n            <CardContent>\n            <Typography className={classes.message} variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {post.message}\n                </Typography>\n            </CardContent>\n            <CardActions className={classes.cardActions}>\n                <Button size='small' color='primary' onClick={()=> {dispatch(likePost(post._id))}}>\n                    <ThumbUpAltIcon fontSize='small'/>\n                    &nbsp;Likes&nbsp; {post.likeCount}\n                </Button>\n                <Button size='small' color='primary' onClick={()=> dispatch(deletePost(post._id))}>\n                    <DeleteIcon fontSize='small'/>\n                    Delete\n                    \n                </Button>\n            </CardActions>\n          \n        </Card>\n    )\n};\n\nexport default Post","import * as api from '../../api/index';\nimport PostActionTypes from './posts.types'\n\n// Action Creators\n\nexport const getPosts = () => \n     async dispatch => {\n    try {\n        const {data} = await api.fetchPosts();\n\n        await dispatch({type:PostActionTypes.FETCH_ALL_POSTS, payload: data})\n    } catch (error) {\n        console.log(error.message)\n    }\n\n}\n\nexport const createPost = (post) => async (dispatch) => {\n    try {\n        const data = await api.createPost(post)\n        dispatch({type:PostActionTypes.CREATE_POST,payload:data})\n    } catch (error) {\n        console.log(error.message)\n        \n    }\n}\n\nexport const updatePost = (id,post) => async (dispatch) => {\n    try {\n        const data = await api.updatePost(id,post);\n\n\n        dispatch({type:PostActionTypes.UPDATE_POST, payload:post})\n\n    } catch (error) {\n        console.log(error.message)\n        \n    }\n};\n\n\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        await api.deletePost(id);\n\n        dispatch({type:PostActionTypes.DELETE_POST, payload:id})\n        \n    } catch (error) {\n\n        console.log(error.message)\n        \n    }\n}\n\n\nexport const likePost = (id) => async (dispatch) => {\n    try {\n        const {data} = await api.likePost(id);\n\n        dispatch({type:PostActionTypes.LIKE_POST, payload:data});\n        \n    } catch (error) {\n        console.log(error)\n        \n    }\n}\n","import React, {useEffect, useState} from 'react'\nimport {TextField, Button, Typography, Paper} from '@material-ui/core';\nimport FileBase from 'react-file-base64'\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport useStyles from './form.styles.js'\nimport Post from '../posts/post/post.component.jsx';\nimport { createPost, updatePost } from '../../redux/posts/posts.actions';\n\n\nconst Form = ({currentId, setCurrentId}) => {\n    const classes = useStyles();\n    const [postData, setPostData] = useState({\n        title:'',\n        message:'',\n        creator:'',\n        tags:'',\n        selectedFile:''\n    });\n\n    const post = useSelector(state => currentId ? state.posts.find(post => post._id === currentId) : null)\n\n    useEffect (()=> {\n        if (post) {\n            setPostData(post);\n        }\n    },[post])\n\n    const dispatch = useDispatch();\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        if (currentId) {\n            dispatch(updatePost(currentId,postData))\n    \n        } else {\n             dispatch(createPost(postData))\n        }\n    \n    clear();\n       \n    }\n\n    const clear = ()=>  {\n        setCurrentId(null);\n        setPostData({\n            title:'',\n            message:'',\n            creator:'',\n            tags:'',\n            selectedFile:''\n        })\n\n    }\n    \n    return (\n        <Paper className={classes.paper}>\n            <form autoComplete='off' noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n                <Typography variant='h6' >{currentId? 'Editing' : 'Creating'} a Memory</Typography>\n                <TextField \n                name=\"creator\" \n                variant='outlined' \n                label='Creator' \n                fullWidth\n                value={postData.creator}\n                onChange={event => setPostData({...postData,creator: event.target.value})}/>\n                <TextField \n                name=\"title\" \n                variant='outlined' \n                label='Title' \n                fullWidth\n                value={postData.title}\n                onChange={event => setPostData({...postData,title: event.target.value})}/>\n                <TextField \n                name=\"message\" \n                variant='outlined' \n                label='Message' \n                fullWidth\n                value={postData.message}\n                onChange={event => setPostData({...postData,message: event.target.value})}/>\n                <TextField \n                name=\"tags\" \n                variant='outlined' \n                label='Tags' \n                fullWidth\n                value={postData.tags}\n                onChange={event => setPostData({...postData,tags: event.target.value.split(\",\")})}/>\n                <div className={classes.fileInput}>\n                    <FileBase \n                        type='file'\n                        multiple={false}\n                        onDone={({base64}) => setPostData({...postData,selectedFile:base64})}\n                \n                    />\n                </div>\n                <Button className={classes.buttonSubmit} variant='contained' color='primary' size='large' type='submit' fullWidth>SUBMIT</Button>\n                <Button variant='contained' color='secondary' size='small' onClick={clear} fullWidth>CLEAR</Button>\n            </form>\n        </Paper>\n    )\n};\n\nexport default Form\n\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  mainContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: 'center',\n  },\n}));\n","import React from 'react';\nimport Post from './post/post.component';\nimport {Grid, CircularProgress} from '@material-ui/core';\nimport {useSelector} from 'react-redux';\n\nimport useStyles from './posts.styles.js';\n\n\nconst Posts = ({setCurrentId}) => {\n    const posts = useSelector(state => state.posts)\n    const classes = useStyles();\n\n    console.log(posts)\n    return (\n       !posts.length ? <CircularProgress/> : (\n            <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\n               {\n                   posts.map(post => (\n                       <Grid key={post._id} itme xs={12} sm={6} md={6}>\n                           <Post post={post} setCurrentId={setCurrentId} /> \n\n                       </Grid>\n                   ))\n               }\n           </Grid>\n        )\n    )\n};\n\nexport default Posts","import {makeStyles} from '@material-ui/core/styles';\n\n\n\nexport default makeStyles(()=>({\n    appBar: {\n        borderRadius: 15,\n        margin: '30px 0',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n      heading: {\n        color: 'rgba(0,183,255, 1)',\n      },\n      image: {\n        marginLeft: '15px',\n      },\n      // [theme.breakpooints.down('sm')]: {\n      //    mainContainer: {\n      //   flexDirection: \"column-reverse\"\n      // }\n      // }\n     \n}))","import React, {useEffect, useState} from 'react';\nimport {Container, AppBar, Typography, Grow, Grid} from '@material-ui/core';\nimport {useDispatch} from 'react-redux'\nimport {getPosts} from './redux/posts/posts.actions.js'\n\nimport memories from './images/memories.png'\nimport Form from './components/form/form.component'\nimport Posts from './components/posts/posts.component'\n\nimport makeStyles from './app.styles.js'\nimport { useTheme } from '@material-ui/core/styles';\n\nconst App = () => {\n    const [currentId, setCurrentId] = useState(null);\n\n    const classes = makeStyles();\n    const dispatch = useDispatch();\n\n    useEffect(()=>{\n        dispatch(getPosts())\n    },[dispatch])\n\n    return (\n        <Container maxWidth='lg'>\n            <AppBar className={classes.appBar} position='static' color='inherit'>\n                <Typography className={classes.heading} variant='h2' align='center'>Diego Memories</Typography>\n                <img className={classes.image} src={memories} alt='memories' height='60' ></img>\n            </AppBar>\n            <Grow in>\n                <Container>\n                    <Grid container justify='space-between' alignItems='stretch' spacing={3}  >\n                        <Grid item xs={12} sm={7}>\n                            <Posts setCurrentId={setCurrentId} />\n                        </Grid>\n                        <Grid item xs={12} sm={4}>\n                            <Form currentId={currentId} setCurrentId={setCurrentId}/>\n                            \n                        </Grid>\n                    </Grid>\n                </Container>\n            </Grow>\n        </Container>\n    )\n};\n\nexport default App;","import PostActionTypes from './posts.types'\n\nconst postReducer = (posts= [],action) => {\n    switch (action.type) {\n        case PostActionTypes.FETCH_ALL_POSTS:\n            return action.payload;\n\n        case PostActionTypes.CREATE_POST:\n            return [...posts, action.payload]\n        case PostActionTypes.UPDATE_POST:\n            return posts.map(post=> post._id === action.payload._id ? action.payload : post)\n        case PostActionTypes.DELETE_POST:\n            return posts.filter(post=> post._id !== action.payload)\n        \n            case PostActionTypes.LIKE_POST:\n            return posts.map(post=> post._id === action.payload._id ? action.payload : post)\n    \n        default:\n            return posts\n    }\n\n}; \n\nexport default postReducer;","import {combineReducers} from 'redux';\nimport postReducer from './posts/post.reducer';\n\n\nexport default combineReducers({\n    posts: postReducer,\n\n})","import {createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport reducers from './root-reducer.js'\nimport logger from 'redux-logger'\n\n\nconst middlewares = [thunk,logger]\n\nconst store = createStore(reducers,applyMiddleware(...middlewares))\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport './index.css'\n// import {createStore, applyMiddleware, compose } from 'redux'\n// import thunk from 'redux-thunk'\n// import reducers from './redux/reducers/root-reducer.js'\n\n// const store = createStore(reducers,compose(applyMiddleware(thunk)))\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n     document.getElementById('root')\n     \n     );\n\n"],"sourceRoot":""}